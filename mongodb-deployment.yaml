apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
stringData:
  mongodb-username: admin
  mongodb-password: password123
---
#  ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
data:
  init-mongo.js: |
    db = db.getSiblingDB('mydb');
    db.createUser({
      user: 'admin',
      pwd: 'password123',
      roles: [{ role: 'readWrite', db: 'mydb' }]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-password
        - name: MONGO_INITDB_DATABASE
          value: mydb
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        # Add this volume mount
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      # Add this volume
      - name: mongodb-init
        configMap:
          name: mongodb-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: myapp
        image: stefanocumbo/calculator-web:latest
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-username
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-password
        - name: MONGO_HOST
          value: mongodb
        - name: MONGO_DB
          value: mydb
